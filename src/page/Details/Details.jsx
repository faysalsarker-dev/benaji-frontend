import { useForm } from 'react-hook-form';

import 'react-loading-skeleton/dist/skeleton.css';
import imgProduct from '../../img/IMG-20240728-WA0003.jpg';
import { useState } from 'react';


import comment_1 from "../../comment/first_1.jpg";
import comment_2 from "../../comment/first_2.jpg";
import comment_3 from "../../comment/first_3.jpg";
import comment_4 from "../../comment/first-4.jpg";


import Review from '../../component/Review';
import { useMutation } from "@tanstack/react-query";
import useAxios from '../../Hook/useAxios';
import toast from 'react-hot-toast';
import Benefit from '../../component/Benifit';
import Footer from '../../component/Footer';
import { ScaleLoader } from 'react-spinners';
import { useNavigate } from 'react-router-dom';

const Details = () => {
  const { register, handleSubmit, formState: { errors } ,reset} = useForm();
  const [quantity, setQuantity] = useState(1);
  const [total, setTotal] = useState(quantity * 1200);
  const [loading,setLoading]= useState(false)
  const axiosCommon = useAxios();
  const navigate = useNavigate()

  const datas = [
    { image: comment_1 },
    { image: comment_2 },
    { image: comment_3 },
    { image: comment_4 },

  ];

  const { mutateAsync } = useMutation({
    mutationFn: async (info) => {
      const { data: updatedData } = await axiosCommon.post(`/order`, info);
      return updatedData;
    },
    onSuccess: (updatedData) => {
      reset()
      toast.success('ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ рж╕ржлрж▓ рж╣рзЯрзЗржЫрзЗ!');
      navigate(`/confirm/${updatedData.insertedId}`);
      setLoading(false)
    },
    onError: () => {
      toast.error('ржЕрж░рзНржбрж╛рж░ ржкрж╛ржарж╛рждрзЗ рж╕ржорж╕рзНржпрж╛ рж╣рзЯрзЗржЫрзЗред ржЕржирзБржЧрзНрж░рж╣ ржХрж░рзЗ ржЖржмрж╛рж░ ржЪрзЗрж╖рзНржЯрж╛ ржХрж░рзБржиред');
      setLoading(false)
    },
  });

  const onSubmit = (data) => {
    setLoading(true)
    const orderInfo = {
      ...data,
      total,
      quantity,
      product_name:'рж╣рж╛рж▓рзБрзЯрж╛рзЯрзЗ ржорзБрж╣рж╛ржмрзНржмржд',
      date:new Date(),
      status:'pending',
      page:1
    };
    mutateAsync(orderInfo);
  };



  const benefitsData = [
    {
      description: 'ржПржХ ржерзЗржХрзЗ ржжрзБржЗ ржорж┐ржирж┐ржЯ рж╕ржоржпрж╝ ржкрж╛ржЗ ржирж╛ рждрж╛ржжрзЗрж░ рж╕ржоржпрж╝ ржмрж╛ржбрж╝ржмрзЗ ред'
    },
    {
      description: 'ржмрзА-рж░рзНржп ржЧрж╛рзЭ ржПржмржВ рж╢ржХрзНрждрж┐рж╢рж╛рж▓рзА ржХрж░рзЗ'
    },
    {
      description: 'рж╢рзБ-ржХрзНрж░рж╛ржирзБрж░ ржкрж░рж┐ржорж╛ржи ржмрзГржжрзНржзрж┐ ржХрж░рзЗ'
    },
    {
      description: 'ржжрзНрж░рзБржд ржмрзАрж░рзНржпржкрж╛ржд ржмржирзНржз ржХрж░рзЗ '
    },
    {
      description: 'ржпрзМ-ржи рж╢ржХрзНрждрж┐ ржмрзГржжрзНржзрж┐ ржХрж░рзЗ'
    },
    {
      description: 'ржЖржЧрж╛ ржорзЛржЯрж╛-ржЧрзЛрзЬрж╛ ржЪрж┐ржХржи-рж░ржЧ ржкрзБрж▓рж╛'
    },
    {
      description: 'рж▓рж┐ржЩрзНржЧ ржмрж╛ржБржХрж╛'
    },
    {
      description: 'рж▓рж┐ржЩрзНржЧ ржЫрзЛржЯ?'
    },
    {
      description: 'рж▓рж┐ржЩрзНржЧ рж╖рзНржЯржВ рж╣рзЯржирж╛'
    },
  ];


  return (
    <div className="container mx-auto p-4">
      <h3 className="text-center text-5xl font-bold mb-6 text-primary">ржЖржорж╛ржжрзЗрж░ рж╣рж╛рж▓рзБрзЯрж╛ред ржжрзЗрж╢рзЗрж░ рж▓ржХрзНрж╖ рж▓ржХрзНрж╖ ржорж╛ржирзБрж╖ ржЙржкржХрзГржд рж╣ржЪрзНржЫрзЗ</h3>
      <div className="border-2 border-secondary rounded-lg p-4 mb-6">
        <h4 className="text-3xl font-semibold text-center mb-4 text-primary border-b-2 pb-2">ржЦрж╛ржУржпрж╝рж╛рж░ ржирж┐ржпрж╝ржо</h4>
        <p className=" text-black font-semibold text-center">
          ржкрзНрж░рждрж┐ржжрж┐ржи рж░рж╛рждрзЗ, ржЦрж╛ржмрж╛рж░ рзйрзж ржорж┐ржирж┐ржЯ ржкрж░рзЗ, ржЖржзрж╛-ржЪрж╛ржоржЪ рж╣рж╛рж▓рзБрзЯрж╛ ржЪрзЗржЯрзЗ ржЦрж╛ржмрзЗржи ржЕржержмрж╛ ржкрж╛ржирж┐рждрзЗ ржорж┐ржХрзНрж╕ ржХрж░рзЗ ржЦрж╛ржмрзЗржиред ржЕржержмрж╛ ржжрзБржз ржерж╛ржХрж▓рзЗ ржжрзБржзрзЗрж░ рж╕рж╛ржерзЗ ржорж┐ржХрзНрж╕ ржХрж░рзЗ ржЦрж╛ржмрзЗржиред
          
ржирж┐рзЯржорж┐ржд рзн ржжрж┐ржи рж╕рзЗржмржирзЗржЗ ржкрзНрж░рж╛ржержорж┐ржХ ржлрж▓рж╛ржлрж▓ ржмрзБржЭрждрзЗ рж╢рзБрж░рзБ ржХрж░ржмрзЗржиред ржПржмржВ ржПржХ ржорж╛рж╕ рж╕рзЗржмржирзЗ рж╕рзНржерж╛рзЯрзАржнрж╛ржмрзЗ рж╕ржорж╛ржзрж╛ржи ржкрж╛ржмрзЗржи
        </p>
      </div>
      <div className='flex justify-center my-2'>
  <a href="tel:01612594964">
    <h3 className='text-2xl font-bold bg-primary rounded-lg text-white p-4'>ржХрж▓ ржХрж░рзБржи 01612594964</h3>
  </a>
</div>

      <div className="flex justify-center mb-6">
        <img src={imgProduct} alt="Product" className="rounded-lg shadow-lg" />
      </div>

      <div className="flex justify-center mb-6">
        <div className="rounded-lg text-center border-2 p-4">
          <h5 className="text-3xl font-bold text-primary">ржорзВрж▓рзНржп: рззрзирзжрзж ржЯрж╛ржХрж╛</h5>
        </div>
      </div>
      <h3 className="text-3xl text-center font-bold  text-red-600 my-6">ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржЪрж╛рж░рзНржЬ ржлрзНрж░рзА ЁЯЪЪ</h3>
      <h4 className="text-center md:text-2xl text-xl font-extrabold mb-4 text-primary">ржЕрж░рзНржбрж╛рж░ ржХрж░рждрзЗ ржирж┐ржЪрзЗрж░ ржлрж░ржоржЯрж┐ ржкрзВрж░ржг ржХрж░рзБржи</h4>
      <form onSubmit={handleSubmit(onSubmit)} className="space-y-4">
        <div className="flex justify-center md:flex-row flex-col items-center">
          <div className="w-full md:w-1/2 p-2">
            <div className="form-control w-full mb-4">
              <label className="label">
                <span className="label-text text-secondary text-2xl">ржЖржкржирж╛рж░ ржирж╛ржо рж▓рж┐ржЦрзБржи :</span>
              </label>
              <input
                {...register('name', { required: 'ржирж╛ржо ржжрзЗрзЯрж╛ ржЖржмрж╢рзНржпржХ' })}
                type="text"
                placeholder="ржЖржкржирж╛рж░ ржирж╛ржо ржПржЦрж╛ржирзЗ рж▓рж┐ржЦрзБржи"
                className={`input input-bordered w-full ${errors.name ? 'border-red-500' : ''}`}
              />
              {errors.name && <span className="text-red-500 text-sm">{errors.name.message}</span>}
            </div>

            <div className="form-control w-full mb-4">
              <label className="label">
                <span className="label-text text-secondary text-2xl">ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржирж╛ржорзНржмрж╛рж░ рж▓рж┐ржЦрзБржи :</span>
              </label>
              <input
                {...register('phone', { required: 'ржорзЛржмрж╛ржЗрж▓ ржирж╛ржорзНржмрж╛рж░ ржжрзЗрзЯрж╛ ржЖржмрж╢рзНржпржХ' })}
                type="tel"
                placeholder="ржЖржкржирж╛рж░ ржорзЛржмрж╛ржЗрж▓ ржирж╛ржорзНржмрж╛рж░ ржПржЦрж╛ржирзЗ рж▓рж┐ржЦрзБржи"
                className={`input input-bordered w-full ${errors.phone ? 'border-red-500' : ''}`}
              />
              {errors.phone && <span className="text-red-500 text-sm">{errors.phone.message}</span>}
            </div>

            <div className="form-control w-full">
              <label className="label">
                <span className="label-text text-secondary text-2xl">ржЖржкржирж╛рж░ ржарж┐ржХрж╛ржирж╛ рж▓рж┐ржЦрзБржи :</span>
              </label>
              <textarea
                {...register('address', { required: 'ржарж┐ржХрж╛ржирж╛ ржжрзЗрзЯрж╛ ржЖржмрж╢рзНржпржХ' })}
                className={`textarea textarea-bordered h-24 w-full ${errors.address ? 'border-red-500' : ''}`}
                placeholder="ржЬрзЗрж▓рж╛, ржЙржкржЬрзЗрж▓рж╛/ ржерж╛ржирж╛, ржбрзЗрж▓рж┐ржнрж╛рж░рж┐ ржПрж░рж┐рзЯрж╛"
              ></textarea>
              {errors.address && <span className="text-red-500 text-sm">{errors.address.message}</span>}
            </div>
            <div className="flex justify-center">
          <button disabled={loading} type="submit" className="p-6 rounded-lg w-full text-3xl bg-primary mt-4 text-white">{loading?<ScaleLoader color='white' />:"ржЕрж░рзНржбрж╛рж░ ржХржиржлрж╛рж░рзНржо ржХрж░рзБржи рзз,рзирзжрзж /- ржЯрж╛ржХрж╛"}</button>
        </div>
          </div>

          <div className="w-full md:w-1/2 p-2">
            <div className="p-6 bg-gray-100 text-gray-800 rounded-lg shadow-md">
              <h3 className="text-xl font-semibold my-3">ржЖржкржирж╛рж░ ржЕрж░рзНржбрж╛рж░ <i className="fa-solid fa-badge-check fa-fw"></i></h3>
              <div className="flex items-center gap-4 mb-6">
                <div className="w-16 h-16 rounded-full overflow-hidden">
                   <img src={imgProduct} alt="Avatar" className="w-full h-full object-cover" />
                </div>
                <div>
                  <h2 className="text-2xl font-bold">ржирж╛ржо : рж╣рж╛рж▓рзБрзЯрж╛рзЯрзЗ ржорзБрж╣рж╛ржмрзНржмржд</h2>
                </div>
              </div>

              {/* <div className="mb-6">
                <h3 className="text-xl font-semibold">ржПржХ ржлрж╛ржЗрж▓ рззрзирзжрзж ржЯрж╛ржХрж╛</h3>
              </div> */}
              <div className="mb-6">
                <div className="flex items-center gap-4">
                <h3 className="text-xl font-semibold">ржПржХ ржлрж╛ржЗрж▓ рзз,рзирзжрзж ржЯрж╛ржХрж╛</h3>
                  {/* <div>
                    <button
                      type="button"
                      className="bg-blue-500 text-white py-2 px-4 rounded mr-2"
                      onClick={() => {
                        const newQuantity = quantity + 1;
                        setQuantity(newQuantity);
                        setTotal(newQuantity * 1200);
                      }}
                    >
                      +
                    </button>
                    <button
                      type="button"
                      disabled={quantity <= 1}
                      className="bg-red-500 text-white py-2 px-4 rounded"
                      onClick={() => {
                        const newQuantity = quantity - 1;
                        setQuantity(newQuantity);
                        setTotal(newQuantity * 1200);
                      }}
                    >
                      -
                    </button>
                  </div> */}
                </div>
              </div>

              <div className="mb-6">
                <h3 className="text-xl font-semibold">ржорзЛржЯ ржорзВрж▓рзНржп: {total} ржЯрж╛ржХрж╛</h3>
              </div>

              
              <div>
                <h4 className="text-2xl text-primary font-semibold mb-4">ржХрзНржпрж╛рж╢ ржЕржи ржбрзЗрж▓рж┐ржнрж╛рж░рж┐</h4>
                <div className="bg-white p-4 rounded shadow-md">
                  <p className="text-lg">ржкржгрзНржп рж╣рж╛рждрзЗ ржкрзЗрзЯрзЗ ржЯрж╛ржХрж╛ ржкрж░рж┐рж╢рзЛржз ржХрж░рзБржи</p>
                </div>
              </div>
            </div>
          </div>
        </div>

    
      </form>
      <h2 className="text-3xl text-center my-4 font-bold mb-8 text-primary">тЭдя╕Прж╣рж╛рж▓рзБржпрж╝рж╛рж░ ржЙржкржХрж╛рж░рж┐рждрж╛ тЭдя╕П <br /> тЭдя╕ПржпрзЗ рж╕ржорж╕рзНржд ржХрж╛ржЬржЧрзБрж▓рзЛ ржХрж░ржмрзЗ тЭдя╕П</h2>
      <Benefit benefitsData={benefitsData} />
      <Review datas={datas} />
      <div className='space-y-2 font-extrabold border-2 border-primary rounded-lg m-2 p-4 text-center text-black  text-xl'>
    <p>
    рж╕ржмржХрж┐ржЫрзБ ржирж┐рж╢рзНржЪрж┐ржд ржерж╛ржХрж▓рзЗ ржЙржкрж░рзЗрж░ ржлрж░рзНржо ржкрзВрж░ржг ржХрж░рзЗ ржЕрж░рзНржбрж╛рж░ ржХрж░рзБржиред
    </p>
    <p>ржПржЦржи ржирж┐ржмржирж╛ ржкрж░рзЗ ржирж┐ржм, ржкрж░рзЗ ржЬрж╛ржирж╛ржЪрзНржЫрж┐ ржПрж░ржХржо рж╣рж▓рзЗ ржлрж░рзНржо ржкрзВрж░ржг ржХржЗрж░рзЗржи ржирж╛ред</p>
    <p>
    ржжрзЯрж╛ ржХрж░рзЗ рж╕ржХрж▓ рждржерзНржп ржкрзЬрзБржи, ржЬрж╛ржирзБржи, рждржмрзБ ржкрзНрж░рж╢рзНржи ржерж╛ржХрж▓рзЗ ржХрж▓ ржХрж░рзБржиред ржлрзЛржирзЗ ржЯрж╛ржХрж╛ ржирж╛ ржерж╛ржХрж▓рзЗ ржПржХржЯрж╛ ржорж┐рж╕ржХрж▓ ржжрж┐ржи, ржХрж▓ ржмрзНржпрж╛ржХ ржХрж░рж╛ рж╣ржмрзЗред рждржмрзБржУ ржкрж░рзЗ ржЬрж╛ржирж╛ржЪрзНржЫрж┐ ржмрж▓рж╛рж░ ржЬржирзНржп ржХрзЗржЙ ржлрж░рзНржо ржкрзВрж░ржг ржХрж░ржмрзЗржи ржирж╛ред
    </p>
    <p>ржЖржкржирж╛рж░ рж╕рзБрж╕рзНржмрж╛рж╕рзНржерзНржп ржХрж╛ржоржирж╛ ржХрж░ржЫрж┐ред</p>
</div>

<Footer number={'01612594964'}/>
    </div>
  );
};

export default Details;
